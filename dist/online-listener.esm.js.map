{"version":3,"file":"online-listener.esm.js","sources":["../src/online-listener.js"],"sourcesContent":["import { ReplaySubject, interval, from } from \"rxjs\";\nimport { switchMap, tap, filter } from \"rxjs/operators\";\n\nconst onlineSubject$ = new ReplaySubject(1);\nconst online$ = onlineSubject$.asObservable();\nlet urlToHit;\n\nonlineSubject$.next(navigator.onLine);\n\nfunction updateOnlineStatus(evt) {\n  if (navigator && navigator.onLine != undefined) {\n    onlineSubject$.next(navigator.onLine);\n  }\n}\n\nwindow.addEventListener(\"offline\", updateOnlineStatus);\nwindow.addEventListener(\"online\", () => createPoll());\n\nfunction checkIfOnline() {\n  if (urlToHit) {\n    return fetch(urlToHit).catch(e => {\n      console.warn(`polling failed`, e);\n      return {};\n    });\n  } else {\n    console.warn(`polling url needs to be set`);\n    return Promise.resolve({});\n  }\n}\n\nlet pollingSubscription;\n\nfunction createPoll() {\n  clearPoll();\n  pollingSubscription = interval(1000)\n    .pipe(\n      filter(i => {\n        if (i === 0) {\n          return true;\n        } else if (i <= 15) {\n          return i % 5 === 0;\n        } else if (i >= 20) {\n          return i % 10 === 0;\n        }\n      }),\n      switchMap(() => from(checkIfOnline()))\n    )\n    .subscribe(results => {\n      if (results.status === 200) {\n        onlineSubject$.next(true);\n        clearPoll();\n      }\n    });\n}\n\nfunction clearPoll() {\n  if (pollingSubscription && pollingSubscription.unsubscribe) {\n    pollingSubscription.unsubscribe();\n  }\n}\n\nfunction setPollingUrl(url) {\n  urlToHit = url;\n}\n\nexport const onlineListener = online$;\nexport { setPollingUrl };\n"],"names":["onlineSubject$","ReplaySubject","online$","asObservable","urlToHit","next","navigator","onLine","updateOnlineStatus","window","addEventListener","createPoll","checkIfOnline","fetch","catch","e","console","warn","Promise","resolve","pollingSubscription","clearPoll","interval","pipe","filter","i","switchMap","from","subscribe","results","status","unsubscribe","setPollingUrl","url","onlineListener"],"mappings":"gGAGMA,CAAAA,cAAc,CAAG,GAAIC,CAAAA,aAAJ,CAAkB,CAAlB,EACjBC,OAAO,CAAGF,cAAc,CAACG,YAAfH,GAChB,GAAII,CAAAA,QAAJ,CAEAJ,cAAc,CAACK,IAAfL,CAAoBM,SAAS,CAACC,MAA9BP,EAEA,QAASQ,CAAAA,kBAAT,EAAiC,CAC3BF,SAAS,EAAIA,SAAS,CAACC,MAAVD,MADc,EAE7BN,cAAc,CAACK,IAAfL,CAAoBM,SAAS,CAACC,MAA9BP,EAIJS,MAAM,CAACC,gBAAPD,CAAwB,SAAxBA,CAAmCD,kBAAnCC,EACAA,MAAM,CAACC,gBAAPD,CAAwB,QAAxBA,CAAkC,IAAME,UAAU,EAAlDF,EAEA,QAASG,CAAAA,aAAT,EAAyB,OACnBR,CAAAA,QADmB,CAEdS,KAAK,CAACT,QAAD,CAALS,CAAgBC,KAAhBD,CAAsBE,CAAC,GAC5BC,OAAO,CAACC,IAARD,iBAAAA,CAA+BD,CAA/BC,CAD4B,CAErB,EAFqB,CAAvBH,CAFc,EAOrBG,OAAO,CAACC,IAARD,8BAAAA,CAPqB,CAQdE,OAAO,CAACC,OAARD,CAAgB,EAAhBA,CARc,EAYzB,GAAIE,CAAAA,mBAAJ,CAEA,QAAST,CAAAA,UAAT,EAAsB,CACpBU,SAAS,EADW,CAEpBD,mBAAmB,CAAGE,QAAQ,CAAC,GAAD,CAARA,CACnBC,IADmBD,CAElBE,MAAM,CAACC,CAAC,EAAI,IACA,CAANA,GAAAA,WADM,MAGM,GAALA,EAAAA,CAHD,CAIS,CAAVA,EAAAA,CAAC,CAAG,CAJH,CAKM,EAALA,EAAAA,CALD,CAMU,CAAXA,EAAAA,CAAC,CAAG,EANH,OAAN,CAAA,CAFYH,CAWlBI,SAAS,CAAC,IAAMC,IAAI,CAACf,aAAa,EAAd,CAAX,CAXSU,EAanBM,SAbmBN,CAaTO,CAAO,EAAI,CACG,GAAnBA,GAAAA,CAAO,CAACC,MADQ,GAElB9B,cAAc,CAACK,IAAfL,IAFkB,CAGlBqB,SAAS,EAHS,CAbF,CAAAC,EAqBxB,QAASD,CAAAA,SAAT,EAAqB,CACfD,mBAAmB,EAAIA,mBAAmB,CAACW,WAD5B,EAEjBX,mBAAmB,CAACW,WAApBX,GAIJ,QAASY,CAAAA,aAAT,CAAuBC,CAAvB,CAA4B,CAC1B7B,QAAQ,CAAG6B,EAGb,KAAaC,CAAAA,cAAc,CAAGhC,OAA9B"}